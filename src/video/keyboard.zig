const std = @import("std");

const platform = @import("./platform_impl/platform_impl.zig");

pub const NativeKeyCode = union(enum) {
    unidentified,
    android: u32,
    macos: u16,
    windows: u16,
    xkb: u32,
};

pub const NativeKey = union(enum) {
    unidentified,
    android: u32,
    macos: u16,
    windows: u16,
    xkb: u32,
    web: []u8,
};

pub const KeyCode = union(enum) {
    unidentified: NativeKeyCode,
    backquote,
    backslash,
    bracket_left,
    bracket_right,
    comma,
    d0,
    d1,
    d2,
    d3,
    d4,
    d5,
    d6,
    d7,
    d8,
    d9,
    equal,
    international_backslash,
    international_ro,
    international_yen,
    a,
    b,
    c,
    d,
    e,
    f,
    g,
    h,
    i,
    j,
    k,
    l,
    m,
    n,
    o,
    p,
    q,
    r,
    s,
    t,
    u,
    v,
    w,
    x,
    y,
    z,
    minus,
    period,
    quote,
    semicolon,
    slash,
    alt_left,
    alt_right,
    backspace,
    caps_lock,
    context_menu,
    control_left,
    control_right,
    enter,
    super_left,
    super_right,
    shift_left,
    shift_right,
    space,
    tab,
    convert,
    kana,
    lang_1,
    lang_2,
    lang_3,
    lang_4,
    lang_5,
    non_convert,
    delete,
    end,
    help,
    home,
    insert,
    page_down,
    page_up,
    arrow_down,
    arrow_left,
    arrow_right,
    arrow_up,
    num_lock,
    numpad_0,
    numpad_1,
    numpad_2,
    numpad_3,
    numpad_4,
    numpad_5,
    numpad_6,
    numpad_7,
    numpad_8,
    numpad_9,
    numpad_add,
    numpad_backspace,
    numpad_clear,
    numpad_clear_entry,
    numpad_comma,
    numpad_decimal,
    numpad_divide,
    numpad_enter,
    numpad_equal,
    numpad_hash,
    numpad_memory_add,
    numpad_memory_clear,
    numpad_memory_recall,
    numpad_memory_store,
    numpad_memory_subtract,
    numpad_multiply,
    numpad_paren_left,
    numpad_paren_right,
    numpad_star,
    numpad_subtract,
    escape,
    @"fn",
    fn_lock,
    print_screen,
    scroll_lock,
    pause,
    browser_back,
    browser_favorites,
    browser_forward,
    browser_home,
    browser_refresh,
    browser_search,
    browser_stop,
    eject,
    launch_app_1,
    launch_app_2,
    launch_mail,
    media_play_pause,
    media_select,
    media_stop,
    media_track_next,
    media_track_previous,
    power,
    sleep,
    audio_volume_down,
    audio_volume_mute,
    audio_volume_up,
    wake,
    meta,
    hyper,
    turbo,
    @"resume",
    @"suspend",
    again,
    copy,
    cut,
    find,
    open,
    paste,
    props,
    select,
    undo,
    hiragana,
    katakana,
    f1,
    f2,
    f3,
    f4,
    f5,
    f6,
    f7,
    f8,
    f9,
    f10,
    f11,
    f12,
    f13,
    f14,
    f15,
    f16,
    f17,
    f18,
    f19,
    f20,
    f21,
    f22,
    f23,
    f24,
    f25,
    f26,
    f27,
    f28,
    f29,
    f30,
    f31,
    f32,
    f33,
    f34,
    f35,
};

pub const Key = union(enum) {
    character: u21,
    unidentified: NativeKey,
    dead: ?u21,
    alt,
    alt_graph,
    caps_lock,
    control,
    @"fn",
    fn_lock,
    num_lock,
    scroll_lock,
    shift,
    symbol,
    symbol_lock,
    meta,
    hyper,
    super,
    enter,
    tab,
    space,
    arrow_down,
    arrow_left,
    arrow_right,
    arrow_up,
    end,
    home,
    page_down,
    page_up,
    backspace,
    clear,
    copy,
    cr_sel,
    cut,
    delete,
    erase_eof,
    ex_sel,
    insert,
    paste,
    redo,
    undo,
    accept,
    again,
    attn,
    cancel,
    context_menu,
    escape,
    execute,
    find,
    help,
    pause,
    play,
    props,
    select,
    zoom_in,
    zoom_out,
    brightness_down,
    brightness_up,
    eject,
    log_off,
    power,
    power_off,
    print_screen,
    hibernate,
    standby,
    wake_up,
    all_candidates,
    alphanumeric,
    code_input,
    compose,
    convert,
    final_mode,
    group_first,
    group_last,
    group_next,
    group_previous,
    mode_change,
    next_candidate,
    non_convert,
    previous_candidate,
    process,
    single_candidate,
    hangul_mode,
    hanja_mode,
    junja_mode,
    eisu,
    hankaku,
    hiragana,
    hiragana_katakana,
    kana_mode,
    kanji_mode,
    katakana,
    romaji,
    zenkaku,
    zenkaku_hankaku,
    soft_1,
    soft_2,
    soft_3,
    soft_4,
    channel_down,
    channel_up,
    close,
    mail_forward,
    mail_reply,
    mail_send,
    media_close,
    media_fast_forward,
    media_pause,
    media_play,
    media_play_pause,
    media_record,
    media_rewind,
    media_track_next,
    media_track_previous,
    new,
    open,
    print,
    save,
    spell_check,
    key11,
    key12,
    audio_balance_left,
    audio_balance_right,
    audio_bass_boost_down,
    audio_bass_boost_toggle,
    audio_bass_boost_up,
    audio_fader_front,
    audio_fader_rear,
    audio_surround_mode_next,
    audio_treble_down,
    audio_treble_up,
    audio_volume_down,
    audio_volume_up,
    audio_volume_mute,
    microphone_toggle,
    microphone_volume_down,
    microphone_volume_up,
    microphone_volume_mute,
    speech_correction_list,
    speech_input_toggle,
    launch_application_1,
    launch_application_2,
    launch_calendar,
    launch_contacts,
    launch_mail,
    launch_media_player,
    launch_music_player,
    launch_phone,
    launch_screen_saver,
    launch_spreadsheet,
    launch_web_browser,
    launch_web_cam,
    launch_word_processor,
    browser_back,
    browser_favorites,
    browser_forward,
    browser_home,
    browser_refresh,
    browser_search,
    browser_stop,
    app_switch,
    call,
    camera,
    camera_focus,
    end_call,
    go_back,
    go_home,
    headset_hook,
    last_number_redial,
    notification,
    manner_mode,
    voice_dial,
    tv,
    tv3d_mode,
    tv_antenna_cable,
    tv_audio_description,
    tv_audio_description_mix_down,
    tv_audio_description_mix_up,
    tv_contents_menu,
    tv_data_service,
    tv_input,
    tv_input_component_1,
    tv_input_component_2,
    tv_input_composite_1,
    tv_input_composite_2,
    tv_input_hdmi_1,
    tv_input_hdmi_2,
    tv_input_hdmi_3,
    tv_input_hdmi_4,
    tv_input_vga_1,
    tv_media_context,
    tv_network,
    tv_number_entry,
    tv_power,
    tv_radio_service,
    tv_satellite,
    tv_satellite_bs,
    tv_satellite_cs,
    tv_satellite_toggle,
    tv_terrestrial_analog,
    tv_terrestrial_digital,
    tv_timer,
    avr_input,
    avr_power,
    color_f0_red,
    color_f1_green,
    color_f2_yellow,
    color_f3_blue,
    color_f4_grey,
    color_f5_brown,
    closed_caption_toggle,
    dimmer,
    display_swap,
    dvr,
    exit,
    favorite_clear_0,
    favorite_clear_1,
    favorite_clear_2,
    favorite_clear_3,
    favorite_recall_0,
    favorite_recall_1,
    favorite_recall_2,
    favorite_recall_3,
    favorite_store_0,
    favorite_store_1,
    favorite_store_2,
    favorite_store_3,
    guide,
    guide_next_day,
    guide_previous_day,
    info,
    instant_replay,
    link,
    list_program,
    live_content,
    lock,
    media_apps,
    media_audio_track,
    media_last,
    media_skip_backward,
    media_skip_forward,
    media_step_backward,
    media_step_forward,
    media_top_menu,
    navigate_in,
    navigate_next,
    navigate_out,
    navigate_previous,
    next_favorites,
    next_user_profile,
    on_demand,
    pairing,
    pin_p_down,
    pin_p_move,
    pin_p_toggle,
    pin_p_up,
    play_speed_down,
    play_speed_reset,
    play_speed_up,
    random_toggle,
    rc_low_battery,
    record_speed_next,
    rf_bypass,
    scan_channels_toggle,
    screen_mode_next,
    settings,
    split_screen_toggle,
    stb_input,
    stb_power,
    subtitle,
    teletext,
    video_mode_next,
    wink,
    zoom_toggle,
    f1,
    f2,
    f3,
    f4,
    f5,
    f6,
    f7,
    f8,
    f9,
    f10,
    f11,
    f12,
    f13,
    f14,
    f15,
    f16,
    f17,
    f18,
    f19,
    f20,
    f21,
    f22,
    f23,
    f24,
    f25,
    f26,
    f27,
    f28,
    f29,
    f30,
    f31,
    f32,
    f33,
    f34,
    f35,

    pub fn toText(key: Key) ?[]const u8 {
        switch (key) {
            .character => return key.character,
            .enter => return "\r",
            .backspace => return "\x08",
            .tab => return "\t",
            .space => return " ",
            .escape => return "\x1b",
            else => return null,
        }
    }
};

pub const KeyLocation = enum {
    left,
    right,
    numpad,
};

pub const ModifiersState = packed struct {
    shift: bool = false,
    ctrl: bool = false,
    alt: bool = false,
    super: bool = false,
};

pub const ModifiersKeys = packed struct(u8) {
    lshift: bool = false,
    rshift: bool = false,
    lctrl: bool = false,
    rctrl: bool = false,
    lalt: bool = false,
    ralt: bool = false,
    lsuper: bool = false,
    rsuper: bool = false,
};

pub const ModifiersKeyState = enum {
    pressed,
    unknown,
};
